{
"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
"contentVersion": "1.0.0.0",
"parameters": {
    "ManagedIDName": {
      "type": "string",
      "metadata": {
        "description": "Managed ID Name"
      }
    },
    "KeyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Managed ID Name"
      }
    },    
    "location": {
        "type": "string",
        "metadata": {
          "description": "Region of Resources"
        }
    }
},
"variables": {
    "utcValue": "[utcNow()]",
    "KeyName": "[concat(parameters('KeyVaultName'),'-HSM')]",
    "DESName": "[concat(parameters('KeyVaultName'),'-DES')]",    
    "KeySize": "2048",
    "KeyDestination": "HSM",
    "ResourceGroupName": "[resourceGroup().id]"      
},
"resources": [
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2019-10-01-preview",
      "name": "encryptvm",
      "location":"[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[parameters('ManagedIDName')]": {
          }
        }
      },
      "kind": "AzurePowerShell",
      "properties": {
        "forceUpdateTag": "[variables('utcValue')]",
        "azPowerShellVersion": "3.0",
        "timeout": "PT30M",
        "arguments": "[format(' -vaultName {0} -KeyName {1} -KeySize {2} -KeyDestination {3}, -DESName {4}, -ResourceGroupName {5}', parameters('keyVaultName'), variables('KeyName'), variables('KeySize'), variables('KeyDestination'), variables('DESName'), variables('ResourceGroupName'))]", // can pass an argument string, double quotes must be escaped
        "scriptContent": "
          param(
            [string] [Parameter(Mandatory=$true)] $vaultName,
            [string] [Parameter(Mandatory=$true)] $KeyName,
            [string] [Parameter(Mandatory=$true)] $KeySize,
            [string] [Parameter(Mandatory=$true)] $KeyDestination,
            [string] [Parameter(Mandatory=$true)] $DESName,
            [string] [Parameter(Mandatory=$true)] $ResourceGroupName                                                            
          )

          $KeyVault = Get-AzKeyVault -VaultName $vaultName
          $KeyExpires = (Get-Date).AddYears(2).ToUniversalTime()
          $KeyNotBefore = (Get-Date).ToUniversalTime()

          $Key = Add-AzKeyVaultKey -VaultName $KeyVault.Name -Name $Keyname -Expires $KeyExpires -NotBefore $KeyNotBefore -Size $KeySize -Destination $KeyDestination

          $desConfig=New-AzDiskEncryptionSetConfig -Location $LocationName -SourceVaultId $keyVault.ResourceId -KeyUrl $key.Key.Kid -IdentityType SystemAssigned

          $des=New-AzDiskEncryptionSet -Name $DESName -ResourceGroupName $ResourceGroupName -InputObject $desConfig

        ",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D"
      }
    }
  ]
}
